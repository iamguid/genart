{"version":3,"sources":["webpack:///webpack/bootstrap 712de836361b29d0bd27","webpack:///./src/js/main.es6","webpack:///./src/js/Rock.es6","webpack:///./~/earcut/src/earcut.js","webpack:///./src/js/Point.es6","webpack:///./src/js/PointsGraph.es6","webpack:///./src/js/Line.es6","webpack:///./src/js/Utils.es6"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,KAAI,UAAU,SAAV,OAAU,CAAU,IAAV,EAAgB;AAC1B,SAAI,UAAU,GAAG,MAAH,CAAU,MAAV,EACT,MADS,CACF,KADE,EAET,IAFS,CAEJ,OAFI,EAEK,KAAK,KAAL,CAFL,CAGT,IAHS,CAGJ,QAHI,EAGM,KAAK,MAAL,CAHhB,CADsB;;AAM1B,SAAI,UAAU,QACT,MADS,CACF,KADE,EAET,IAFS,CAEJ,OAFI,EAEK,SAFL,EAGT,KAHS,CAGH,iBAHG,EAGgB,oBAHhB,EAIT,IAJS,CAIJ,OAJI,EAIK,KAAK,KAAL,CAJL,CAKT,IALS,CAKJ,QALI,EAKM,KAAK,MAAL,CALhB,CANsB;;AAa1B,YAAO;AACH,cAAK,OAAL;AACA,kBAAS,OAAT;MAFJ,CAb0B;EAAhB;;AAmBd,UAAS,cAAT,CAAyB,MAAzB,EAAiC;AAC7B,SAAI,aAAa,OAAO,CAAP,CAAb,CADyB;;AAG7B,SAAI,SAAS,OAAO,MAAP,CAAc,UAAC,KAAD,EAAQ,KAAR,EAAkB;AACzC,aAAI,SAAS,CAAC,MAAM,CAAN,EAAS,MAAM,CAAN,CAAV,CAAmB,IAAnB,CAAwB,GAAxB,CAAT,CADqC;AAEzC,aAAI,SAAS,QAAQ,GAAR,GAAc,MAAd,CAF4B;AAGzC,gBAAO,MAAP,CAHyC;MAAlB,EAIxB,EAJU,CAAT,CAHyB;;AAS7B,SAAI,aAAa,OAAO,CAAP,CAAb,CATyB;AAU7B,YAAO,SAAS,GAAT,GAAe,CAAC,WAAW,CAAX,EAAc,WAAW,CAAX,CAAf,CAA6B,IAA7B,CAAkC,GAAlC,CAAf,CAVsB;EAAjC;;AAaA,KAAI,YAAY,SAAZ,SAAY,CAAU,MAAV,EAAkB;AAC9B,SAAI,aAAa,OACZ,KADY,GAEZ,MAFY,CAEL,GAFK,EAGZ,IAHY,CAGP,OAHO,EAGE,OAHF,EAIZ,MAJY,CAIL,QAJK,EAKZ,IALY,CAKP,IALO,EAKD;gBAAK,EAAE,CAAF;MAAL,CALC,CAMZ,IANY,CAMP,IANO,EAMD;gBAAK,EAAE,CAAF;MAAL,CANC,CAOZ,IAPY,CAOP,GAPO,EAOF,GAPE,EAQZ,KARY,CAQN,SARM,EAQK,CARL,EASZ,KATY,CASN,MATM,EASE,KATF,CAAb,CAD0B;EAAlB;;AAahB,KAAI,WAAW,SAAX,QAAW,CAAU,MAAV,EAAkB;AAC7B,SAAI,YAAY,OACX,KADW,GAEX,MAFW,CAEJ,UAFI,CAAZ,CADyB;;AAK7B,eAAU,IAAV,CAAe,QAAf,EAAyB,UAAC,IAAD,EAAU;AAC/B,gBAAO,eAAe,CAAC,KAAK,EAAL,EAAS,KAAK,EAAL,CAAzB,CAAP,CAD+B;MAAV,CAAzB,CAL6B;;AAS7B,eACK,KADL,CACW,SADX,EACsB,GADtB,EAEK,KAFL,CAEW,QAFX,EAEqB,OAFrB,EAGK,KAHL,CAGW,cAHX,EAG2B,CAH3B,EAIK,KAJL,CAIW,MAJX,EAImB,MAJnB,EAT6B;EAAlB;;AAgBf,KAAI,WAAW,SAAX,QAAW,CAAU,OAAV,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B;AAC1C,SAAI,gBAAgB,QACf,MADe,CACR,GADQ,EAEf,IAFe,CAEV,OAFU,EAED,MAFC,EAGf,IAHe,CAGV,cAHU,EAGM,KAAK,WAAL,CAHN,CAIf,IAJe,CAIV,aAJU,EAIK,KAAK,WAAL,CAJrB;;;AADsC,cAQjC,QAAT,CAAmB,MAAnB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC;AACnC,gBACK,MADL,CACY,MADZ,EAEK,IAFL,CAEU,GAFV,EAEe,KAAK,CAAL,CAFf,CAGK,IAHL,CAGU,GAHV,EAGe,KAAK,CAAL,CAHf,CAIK,IAJL,CAIU,OAJV,EAImB,KAAK,CAAL,CAJnB,CAKK,IALL,CAKU,QALV,EAKoB,KAAK,CAAL,CALpB,CAMK,KANL,CAMW,MANX,EAMmB,MANnB,EAOK,KAPL,CAOW,QAPX,EAOqB,KAPrB,EAQK,KARL,CAQW,cARX,EAQ2B,CAR3B,EADmC;;AAWnC,gBACK,MADL,CACY,MADZ,EAEK,IAFL,CAEU,GAFV,EAEe,KAAK,CAAL,CAFf,CAGK,IAHL,CAGU,GAHV,EAGe,KAAK,CAAL,GAAS,EAAT,CAHf,CAIK,IAJL,CAIa,cAAS,KAAK,CAAL,UAAW,KAAK,CAAL,MAJjC,EAKK,IALL,CAKU,aALV,EAKyB,YALzB,EAMK,IANL,CAMU,WANV,EAMuB,MANvB,EAOK,IAPL,CAOU,MAPV,EAOkB,KAPlB,EAXmC;MAAvC;;AAqBA,cAAS,aAAT,CAAwB,MAAxB,EAAgC,WAAhC,EAA6C;AACzC,aAAI,QAAQ,OAAO,IAAP,CAAY,YAAY,UAAZ,CAAZ,CAAoC,GAApC,CAAwC,eAAO;AACvD,oBAAO,YAAY,UAAZ,CAAuB,GAAvB,EAA4B,IAA5B,CADgD;UAAP,EAEjD,EAFS,CAAR,CADqC;;AAKzC,aAAI,iBAAiB,OAChB,MADgB,CACT,GADS,EAEhB,IAFgB,CAEX,OAFW,EAEF,YAFE,CAAjB,CALqC;;AASzC,aAAI,OAAO,eACN,SADM,CACI,OADJ,EAEN,IAFM,CAED,KAFC,EAGN,IAHM,CAGD,QAHC,CAAP,CATqC;MAA7C;;AAeA,cAAS,cAAT,CAAyB,MAAzB,EAAiC,WAAjC,EAA8C;AAC1C,aAAI,SAAS,OAAO,IAAP,CAAY,YAAY,UAAZ,CAAZ,CAAoC,GAApC,CAAwC,UAAC,GAAD,EAAS;AAC1D,oBAAO,YAAY,UAAZ,CAAuB,GAAvB,EAA4B,KAA5B,CADmD;UAAT,CAAjD,CADsC;;AAK1C,aAAI,kBAAkB,OACjB,MADiB,CACV,GADU,EAEjB,IAFiB,CAEZ,OAFY,EAEH,aAFG,CAAlB,CALsC;;AAS1C,aAAI,QAAQ,gBACP,SADO,CACG,QADH,EAEP,IAFO,CAEF,MAFE,EAGP,IAHO,CAGF,SAHE,CAAR,CATsC;MAA9C;EA5CW;;;;;;AAiEf,KAAI,aAAa;AACb,YAAO,IAAP;AACA,aAAQ,IAAR;EAFA;;;;;;AAUJ,KAAI,WAAW,QAAQ,UAAR,CAAX;;;;;;;;;AASJ,KAAI,IAAI,GAAJ;AACJ,KAAI,IAAI,CAAJ;;AAEJ,UAAS,SAAS,OAAT,EAAkB,KAA3B,EAAkC,mBAAS,MAAO,CAAP,EAAU,MAAM,CAAN,EAAS,KAAM,CAAN,EAAS,CAArC,EAAyC,MAAM,CAAN,CAA3E;AACA,UAAS,SAAS,OAAT,EAAkB,KAA3B,EAAkC,mBAAS,MAAO,CAAP,EAAU,MAAM,CAAN,EAAS,MAAM,CAAN,EAAS,CAArC,EAAyC,MAAM,CAAN,CAA3E;AACA,UAAS,SAAS,OAAT,EAAkB,KAA3B,EAAkC,mBAAS,MAAO,CAAP,EAAU,MAAM,CAAN,EAAS,MAAM,CAAN,EAAS,EAArC,EAAyC,MAAM,CAAN,CAA3E;AACA,UAAS,SAAS,OAAT,EAAkB,KAA3B,EAAkC,mBAAS,MAAO,CAAP,EAAU,MAAM,CAAN,EAAS,MAAM,CAAN,EAAS,CAArC,EAAyC,MAAM,CAAN,CAA3E;AACA,UAAS,SAAS,OAAT,EAAkB,KAA3B,EAAkC,mBAAS,MAAO,CAAP,EAAU,MAAM,CAAN,EAAS,MAAM,CAAN,EAAS,CAArC,EAAyC,MAAM,CAAN,CAA3E;AACA,UAAS,SAAS,OAAT,EAAkB,KAA3B,EAAkC,mBAAS,MAAO,CAAP,EAAU,MAAM,CAAN,EAAS,KAAM,CAAN,EAAS,CAArC,EAAyC,MAAM,CAAN,CAA3E;AACA,UAAS,SAAS,OAAT,EAAkB,KAA3B,EAAkC,mBAAS,MAAO,CAAP,EAAU,MAAM,CAAN,EAAS,KAAM,CAAN,EAAS,CAArC,EAAyC,MAAM,CAAN,CAA3E;AACA,UAAS,SAAS,OAAT,EAAkB,KAA3B,EAAkC,mBAAS,MAAO,CAAP,EAAU,MAAM,CAAN,EAAS,MAAM,CAAN,EAAS,CAArC,EAAyC,MAAM,CAAN,CAA3E;AACA,UAAS,SAAS,OAAT,EAAkB,KAA3B,EAAkC,mBAAS,MAAO,CAAP,EAAU,MAAM,CAAN,EAAS,KAAM,CAAN,EAAS,CAArC,EAAyC,MAAM,CAAN,CAA3E;AACA,UAAS,SAAS,OAAT,EAAkB,KAA3B,EAAkC,mBAAS,OAAO,CAAP,EAAU,MAAM,CAAN,EAAS,KAAM,CAAN,EAAS,CAArC,EAAyC,MAAM,CAAN,CAA3E;AACA,UAAS,SAAS,OAAT,EAAkB,IAA3B,EAAkC,mBAAS,MAAO,CAAP,EAAU,MAAM,CAAN,EAAS,KAAM,CAAN,EAAS,CAArC,EAAyC,MAAM,CAAN,CAA3E;AACA,UAAS,SAAS,OAAT,EAAkB,IAA3B,EAAkC,mBAAS,MAAO,CAAP,EAAU,MAAM,CAAN,EAAS,KAAM,CAAN,EAAS,CAArC,EAAyC,MAAM,CAAN,CAA3E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpKA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;KAEM;AACF,cADE,IACF,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,iBAAtB,EAAyC,eAAzC,EAA0D;+BADxD,MACwD;;AACtD,cAAK,CAAL,GAAS,CAAT,CADsD;AAEtD,cAAK,CAAL,GAAS,CAAT,CAFsD;AAGtD,cAAK,CAAL,GAAS,CAAT,CAHsD;AAItD,cAAK,iBAAL,GAAyB,iBAAzB,CAJsD;AAKtD,cAAK,eAAL,GAAuB,eAAvB,CALsD;;AAOtD,cAAK,WAAL,GAAmB,IAAI,sBAAY,KAAZ,EAAvB,CAPsD;AAQtD,cAAK,aAAL,GARsD;MAA1D;;kBADE;;yCAYe;AACb,kBAAK,iBAAL,GADa;;;;6CAII;AACjB,iBAAI,QAAQ,KAAK,WAAL,CADK;AAEjB,iBAAI,gBAAgB,KAAK,oBAAL,EAAhB,CAFa;AAGjB,iBAAI,gBAAgB,KAAK,mBAAL,CAAyB,aAAzB,CAAhB,CAHa;AAIjB,iBAAI,YAAY,EAAZ;;;AAJa,iBAOb,OAAO,OAAP,CAPa;AAQjB,2BAAc,OAAd,CAAsB,UAAC,CAAD,EAAI,CAAJ,EAAU;AAC5B,qBAAI,KAAK,MAAM,SAAN,CAAgB,OAAO,EAAE,CAAF,CAAP,EAAa,cAAc,EAAE,CAAF,CAAd,CAA7B,CAAL,CADwB;AAE5B,qBAAI,KAAK,MAAM,SAAN,CAAgB,OAAO,EAAE,CAAF,CAAP,EAAa,cAAc,EAAE,CAAF,CAAd,CAA7B,CAAL,CAFwB;AAG5B,qBAAI,KAAK,MAAM,SAAN,CAAgB,OAAO,EAAE,CAAF,CAAP,EAAa,cAAc,EAAE,CAAF,CAAd,CAA7B,CAAL,CAHwB;;AAK5B,uBAAM,OAAN,CAAc,GAAG,GAAH,EAAQ,GAAG,GAAH,CAAtB,CAL4B;AAM5B,uBAAM,OAAN,CAAc,GAAG,GAAH,EAAQ,GAAG,GAAH,CAAtB,CAN4B;AAO5B,uBAAM,OAAN,CAAc,GAAG,GAAH,EAAQ,GAAG,GAAH,CAAtB,CAP4B;;AAS5B,2BAAU,IAAV,CAAe,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAf,EAT4B;cAAV,CAAtB,CARiB;;AAoBjB,oBAAO,UAAU,MAAV,GAAmB,CAAnB,EAAsB;AACzB,qBAAI,IAAI,UAAU,GAAV,EAAJ,CADqB;;AAGzB,qBAAI,KAAK,MAAM,OAAN,CAAc,EAAE,CAAF,EAAK,GAAL,EAAU,EAAE,CAAF,EAAK,GAAL,CAA7B,CAHqB;AAIzB,qBAAI,KAAK,MAAM,OAAN,CAAc,EAAE,CAAF,EAAK,GAAL,EAAU,EAAE,CAAF,EAAK,GAAL,CAA7B,CAJqB;AAKzB,qBAAI,KAAK,MAAM,OAAN,CAAc,EAAE,CAAF,EAAK,GAAL,EAAU,EAAE,CAAF,EAAK,GAAL,CAA7B,CALqB;;AAOzB,qBAAI,IAAI,GAAG,IAAH,CAAQ,CAAR,CAPiB;AAQzB,qBAAI,IAAI,GAAG,IAAH,CAAQ,CAAR,CARiB;AASzB,qBAAI,IAAI,GAAG,IAAH,CAAQ,CAAR,CATiB;;AAWzB,qBAAI,IAAI,CAAC,IAAI,CAAJ,GAAQ,CAAR,CAAD,GAAc,CAAd,CAXiB;AAYzB,qBAAI,OAAO,KAAK,IAAL,CAAU,KAAK,IAAI,CAAJ,CAAL,IAAe,IAAI,CAAJ,CAAf,IAAyB,IAAI,CAAJ,CAAzB,CAAjB,CAZqB;;AAczB,qBAAI,OAAO,KAAK,eAAL,EAAsB,SAAjC;;AAEA,qBAAI,oBAAoB,KAAK,cAAL,CAAoB,EAAE,CAAF,CAApB,EAA0B,EAAE,CAAF,CAA1B,EAAgC,EAAE,CAAF,CAAhC,CAApB,CAhBqB;AAiBzB,6BAAY,UAAU,MAAV,CAAiB,iBAAjB,CAAZ,CAjByB;cAA7B;;;;gDAqBoB;AACpB,iBAAI,cAAc,oBACd,KAAK,CAAL,GAAS,CAAT,GAAa,KAAK,CAAL,EACb,KAAK,CAAL,GAAS,CAAT,GAAa,KAAK,CAAL,CAFb,CADgB;;AAMpB,iBAAI,SAAS,KAAK,CAAL,GAAS,CAAT,CANO;;AAQpB,oBAAO,gBAAM,gBAAN,CAAuB,WAAvB,EAAoC,KAAK,iBAAL,EAAwB,MAA5D,EAAoE,SAAS,EAAT,CAA3E,CARoB;;;;wCAWR,IAAI,IAAI,IAAI;AACxB,iBAAI,WAAW,KAAK,4BAAL,CAAkC,GAAG,KAAH,EAAU,GAAG,KAAH,EAAU,GAAG,KAAH,CAAjE,CADoB;AAExB,iBAAI,KAAK,KAAK,WAAL,CAAiB,SAAjB,CAA2B,GAAG,GAAH,GAAS,GAAG,GAAH,GAAS,GAAG,GAAH,EAAQ,QAArD,CAAL,CAFoB;;AAIxB,kBAAK,WAAL,CAAiB,OAAjB,CAAyB,GAAG,GAAH,EAAQ,GAAG,GAAH,CAAjC,CAJwB;AAKxB,kBAAK,WAAL,CAAiB,OAAjB,CAAyB,GAAG,GAAH,EAAQ,GAAG,GAAH,CAAjC,CALwB;AAMxB,kBAAK,WAAL,CAAiB,OAAjB,CAAyB,GAAG,GAAH,EAAQ,GAAG,GAAH,CAAjC,CANwB;;AAQxB,iBAAI,KAAK,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAL,CARoB;AASxB,iBAAI,KAAK,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAL,CAToB;AAUxB,iBAAI,KAAK,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAL,CAVoB;;AAYxB,oBAAO,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAP,CAZwB;;;;sDAeE,GAAG,GAAG,GAAG;AACnC,iBAAI,KAAK,KAAK,MAAL,EAAL,CAD+B;AAEnC,iBAAI,KAAK,KAAK,MAAL,EAAL,CAF+B;AAGnC,iBAAI,SAAS,KAAK,IAAL,CAAU,EAAV,CAAT,CAH+B;;AAKnC,iBAAI,IAAI,CAAC,IAAI,MAAJ,CAAD,GAAe,EAAE,CAAF,GAAM,MAAC,IAAU,IAAI,EAAJ,CAAV,GAAqB,EAAE,CAAF,GAAM,MAAC,GAAS,EAAT,GAAe,EAAE,CAAF,CALtC;AAMnC,iBAAI,IAAI,CAAC,IAAI,MAAJ,CAAD,GAAe,EAAE,CAAF,GAAM,MAAC,IAAU,IAAI,EAAJ,CAAV,GAAqB,EAAE,CAAF,GAAM,MAAC,GAAS,EAAT,GAAe,EAAE,CAAF,CANtC;;AAQnC,oBAAO,oBAAU,CAAV,EAAa,CAAb,CAAP,CARmC;;;;6CAWlB,QAAQ;AACzB,iBAAI,YAAY,sBAAO,OAAO,MAAP,CAAc,UAAC,KAAD,EAAQ,CAAR,EAAc;AAC/C,uBAAM,IAAN,CAAW,EAAE,CAAF,CAAX,CAD+C;AAE/C,uBAAM,IAAN,CAAW,EAAE,CAAF,CAAX,CAF+C;AAG/C,wBAAO,KAAP,CAH+C;cAAd,EAIlC,EAJoB,CAAP,CAAZ;;;AADqB,iBAQrB,SAAS,EAAT,CARqB;AASzB,kBAAK,IAAI,IAAI,CAAJ,EAAO,MAAM,UAAU,MAAV,EAAkB,IAAI,GAAJ,EAAS,KAAK,CAAL,EAAQ;AACrD,wBAAO,IAAP,CAAY,UAAU,KAAV,CAAgB,CAAhB,EAAmB,IAAI,CAAJ,CAA/B,EADqD;cAAzD;;AAIA,oBAAO,MAAP,CAbyB;;;;YA9F3B;;;mBA+GS,K;;;;;;ACpHf;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,2EAA0E;AAC1E;AACA;AACA;;AAEA,0BAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAuB,SAAS;AAChC,MAAK;AACL,4BAA2B,YAAY;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;;AAEA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0CAAyC;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAAyC;;AAEzC,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,0CAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAe,kBAAkB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA,kCAAiC,+BAA+B;;AAEhE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mDAAkD;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,YAAY;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB,yCAAyC;AAC3D;;AAEA,oBAAmB,iBAAiB;AACpC,wBAAuB,oBAAoB;AAC3C,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;KCnoBM;AACF,cADE,KACF,CAAa,EAAb,EAAiB,EAAjB,EAAqB;+BADnB,OACmB;;AACjB,cAAK,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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 712de836361b29d0bd27\n **/","import Rock from './Rock';\nimport Line from './Line';\nimport Point from './Point';\nimport Utils from './Utils';\n\nvar prepare = function (size) {\n    var rootSvg = d3.select('body')\n        .append('svg')\n        .attr('width', size.width)\n        .attr('height', size.height);\n\n    var polygon = rootSvg\n        .append('svg')\n        .attr('class', 'polygon')\n        .style('shape-rendering', 'geometricPrecision')\n        .attr('width', size.width)\n        .attr('height', size.height)\n\n    return {\n        svg: rootSvg,\n        polygon: polygon\n    };\n}\n\nfunction pointsToString (points) {\n    var firstPoint = points[0]\n\n    var string = points.reduce((total, point) => {\n        var joined = [point.x, point.y].join(',');\n        var result = total + ' ' + joined;\n        return result\n    }, '')\n\n    var firstPoint = points[0];\n    return string + ' ' + [firstPoint.x, firstPoint.y].join(',');\n}\n\nvar drawPoint = function (select) {\n    var pointEnter = select\n        .enter()\n        .append('g')\n        .attr('class', 'point')\n        .append('circle')\n        .attr('cx', d => d.x)\n        .attr('cy', d => d.y)\n        .attr('r', 2.5)\n        .style('opacity', 0)\n        .style('fill', 'red');\n}\n\nvar drawLine = function (select) {\n    var lineEnter = select\n        .enter()\n        .append('polyline');\n\n    lineEnter.attr('points', (line) => {\n        return pointsToString([line.p1, line.p2]);\n    });\n\n    lineEnter\n        .style('opacity', 0.3)\n        .style('stroke', 'black')\n        .style('stroke-width', 1)\n        .style('fill', 'none');\n}\n\nvar drawRock = function (polygon, name, rock) {\n    var rockContainer = polygon\n        .append('g')\n        .attr('class', 'rock')\n        .call(drawRockPoints, rock.pointsGraph)\n        .call(drawRockLines, rock.pointsGraph)\n        //.call(drawRect, name, rock);\n\n    function drawRect (select, name, rock) {\n        select\n            .append('rect')\n            .attr('x', rock.x)\n            .attr('y', rock.y)\n            .attr('width', rock.s)\n            .attr('height', rock.s)\n            .style('fill', 'none')\n            .style('stroke', 'red')\n            .style('stroke-width', 1);\n\n        select\n            .append('text')\n            .attr('x', rock.x)\n            .attr('y', rock.y - 10)\n            .text(`${name} (${rock.x}, ${rock.y})`)\n            .attr('font-family', 'sans-serif')\n            .attr('font-size', '13px')\n            .attr('fill', 'red');\n    }\n\n    function drawRockLines (select, pointsGraph) {\n        var lines = Object.keys(pointsGraph._adjMatrix).map(key => {\n            return pointsGraph._adjMatrix[key].line;\n        }, [])\n\n        var linesContainer = select\n            .append('g')\n            .attr('class', 'rock-lines');\n\n        var line = linesContainer\n            .selectAll('.line')\n            .data(lines)\n            .call(drawLine);\n    }\n\n    function drawRockPoints (select, pointsGraph) {\n        var points = Object.keys(pointsGraph._vertexMap).map((key) => {\n            return pointsGraph._vertexMap[key].point;\n        })\n\n        var pointsContainer = select\n            .append('g')\n            .attr('class', 'rock-points');\n\n        var point = pointsContainer\n            .selectAll('.point')\n            .data(points)\n            .call(drawPoint);\n    }\n}\n\n\n/*\n * Set globals\n */\n\nvar globalSize = {\n    width: 2248,\n    height: 1400\n}\n\n\n/*\n * Draw all\n */\n\nvar prepared = prepare(globalSize);\n//drawRock(prepared.polygon, 'r1',  new Rock(400, 500, 260, 7, 1600));\n//drawRock(prepared.polygon, 'r2',  new Rock(374, 768, 30,  4, 1000));\n//drawRock(prepared.polygon, 'r7',  new Rock(300, 700, 80,  3, 300));\n//drawRock(prepared.polygon, 'r8',  new Rock(449, 860, 100, 5, 500));\n//drawRock(prepared.polygon, 'r9',  new Rock(334, 817, 40,  5, 1000));\n//drawRock(prepared.polygon, 'r10', new Rock(384, 914, 40,  5, 1000));\n//drawRock(prepared.polygon, 'r11', new Rock(450, 100, 100, 5, 500));\n\nvar n = 1.4\nvar m = 1\n\ndrawRock(prepared.polygon, 'r10', new Rock(650  * n, 650 * n, 30  * n, 5,  300 * m));\ndrawRock(prepared.polygon, 'r09', new Rock(820  * n, 540 * n, 180 * n, 7,  600 * m));\ndrawRock(prepared.polygon, 'r01', new Rock(500  * n, 200 * n, 360 * n, 10, 300 * m));\ndrawRock(prepared.polygon, 'r02', new Rock(200  * n, 250 * n, 260 * n, 7,  900 * m));\ndrawRock(prepared.polygon, 'r05', new Rock(920  * n, 200 * n, 200 * n, 7,  400 * m));\ndrawRock(prepared.polygon, 'r04', new Rock(480  * n, 120 * n, 90  * n, 8,  300 * m));\ndrawRock(prepared.polygon, 'r06', new Rock(850  * n, 160 * n, 60  * n, 6,  300 * m));\ndrawRock(prepared.polygon, 'r03', new Rock(450  * n, 548 * n, 100 * n, 8,  900 * m));\ndrawRock(prepared.polygon, 'r07', new Rock(890  * n, 420 * n, 80  * n, 5,  900 * m));\ndrawRock(prepared.polygon, 'r08', new Rock(1100 * n, 540 * n, 20  * n, 5,  300 * m));\ndrawRock(prepared.polygon, 'r4',  new Rock(260  * n, 530 * n, 30  * n, 5,  100 * m));\ndrawRock(prepared.polygon, 'r5',  new Rock(350  * n, 160 * n, 30  * n, 5,  100 * m));\n\n\n\n\n//drawRock(prepared.polygon, 'r',  new Rock(100, 100, 800,  6, 500));\n\n\n\n\n//var maxSize = 500;\n//var minSize = 260;\n\n//var leftOffset = 180;\n//for (var i = 0; i < 3; i++) {\n    //var topOffset = 180\n\n    //var cnt, size, fff;\n\n    //for (var j = 0; j < 2; j++) {\n        //cnt = Utils.getRandomInt(4, 5);\n        //size = Utils.getRandomInt(150, 200);\n        //fff = Utils.getRandomInt(2000, 3000);\n\n        //drawRock(prepared.polygon, '', new Rock(leftOffset, topOffset, size, cnt, fff));\n\n        //topOffset += 80 + size\n    //}\n\n    //leftOffset += 80 + size;\n//}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/main.es6\n **/","import earcut from 'earcut';\nimport Point from './Point';\nimport PointsGraph from './PointsGraph';\nimport Utils from './Utils';\n\nclass Rock {\n    constructor (x, y, s, rockOuterPointCnt, minTriangleArea) {\n        this.x = x;\n        this.y = y;\n        this.s = s;\n        this.rockOuterPointCnt = rockOuterPointCnt;\n        this.minTriangleArea = minTriangleArea;\n\n        this.pointsGraph = new PointsGraph.Graph();\n        this._generateRock();\n    }\n\n    _generateRock () {\n        this._generateRockBody();\n    }\n\n    _generateRockBody () {\n        var graph = this.pointsGraph;\n        var polygonPoints = this._randomPolygonPoints();\n        var baseTriangles = this._triangulatePolygon(polygonPoints);\n        var triangles = [];\n\n        // Forcing fill graph\n        var pref = 'body_';\n        baseTriangles.forEach((t, i) => {\n            var v1 = graph.addVertex(pref + t[0], polygonPoints[t[0]]);\n            var v2 = graph.addVertex(pref + t[1], polygonPoints[t[1]]);\n            var v3 = graph.addVertex(pref + t[2], polygonPoints[t[2]]);\n\n            graph.addEdge(v1.uid, v2.uid);\n            graph.addEdge(v2.uid, v3.uid);\n            graph.addEdge(v3.uid, v1.uid);\n\n            triangles.push([v1, v2, v3]);\n        });\n\n        while (triangles.length > 0) {\n            var t = triangles.pop();\n\n            var e1 = graph.getEdge(t[0].uid, t[1].uid);\n            var e2 = graph.getEdge(t[1].uid, t[2].uid);\n            var e3 = graph.getEdge(t[2].uid, t[0].uid);\n\n            var a = e1.line.d;\n            var b = e2.line.d;\n            var c = e3.line.d;\n\n            var p = (a + b + c) / 2;\n            var area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\n            if (area < this.minTriangleArea) continue;\n\n            var splittedTriangles = this._splitTriangle(t[0], t[1], t[2]);\n            triangles = triangles.concat(splittedTriangles)\n        }\n    }\n\n    _randomPolygonPoints () {\n        var centerPoint = new Point (\n            this.s / 2 + this.x,\n            this.s / 2 + this.y\n        );\n\n        var radius = this.s / 2\n\n        return Utils.rndPolygonPoints(centerPoint, this.rockOuterPointCnt, radius, radius - 20);\n    }\n\n    _splitTriangle (v1, v2, v3) {\n        var rndPoint = this._generateRandPointInTriangle(v1.point, v2.point, v3.point);\n        var rv = this.pointsGraph.addVertex(v1.uid + v2.uid + v3.uid, rndPoint);\n\n        this.pointsGraph.addEdge(rv.uid, v1.uid);\n        this.pointsGraph.addEdge(rv.uid, v2.uid);\n        this.pointsGraph.addEdge(rv.uid, v3.uid);\n\n        var t1 = [v1, v2, rv];\n        var t2 = [v2, v3, rv];\n        var t3 = [v3, v1, rv];\n\n        return [t1, t2, t3];\n    }\n\n    _generateRandPointInTriangle (a, b, c) {\n        var r1 = Math.random();\n        var r2 = Math.random();\n        var sqrtr1 = Math.sqrt(r1);\n\n        var x = (1 - sqrtr1) * a.x + (sqrtr1 * (1 - r2)) * b.x + (sqrtr1 * r2) * c.x\n        var y = (1 - sqrtr1) * a.y + (sqrtr1 * (1 - r2)) * b.y + (sqrtr1 * r2) * c.y\n\n        return new Point(x, y);\n    }\n\n    _triangulatePolygon (points) {\n        var triangles = earcut(points.reduce((total, p) => {\n            total.push(p.x);\n            total.push(p.y);\n            return total;\n        }, []));\n\n        // Split result array to chunks\n        var result = [];\n        for (var i = 0, len = triangles.length; i < len; i += 3) {\n            result.push(triangles.slice(i, i + 3));\n        }\n\n        return result;\n    }\n}\n\nexport default Rock\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/Rock.es6\n **/","'use strict';\n\nmodule.exports = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, size;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and size are later used to transform coords into integers for z-order calculation\n        size = Math.max(maxX - minX, maxY - minY);\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, size);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) return null;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, size, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && size) indexCurve(ear, minX, minY, size);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (size ? isEarHashed(ear, minX, minY, size) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, size, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, size, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, size);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, size) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, size),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, size);\n\n    // first look for points inside the triangle in increasing z-order\n    var p = ear.nextZ;\n\n    while (p && p.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.nextZ;\n    }\n\n    // then look for points in decreasing z-order\n    p = ear.prevZ;\n\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, size) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, size);\n                earcutLinked(c, triangles, dim, minX, minY, size);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, size) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, size);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize === 0) {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                } else if (qSize === 0 || !q) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else if (p.z <= q.z) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and size of the data bounding box\nfunction zOrder(x, y, minX, minY, size) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) / size;\n    y = 32767 * (y - minY) / size;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if ((equals(p1, q1) && equals(p2, q2)) ||\n        (equals(p1, q2) && equals(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/earcut/src/earcut.js\n ** module id = 2\n ** module chunks = 0\n **/","class Point {\n    constructor (_x, _y) {\n        this.x = _x;\n        this.y = _y;\n    }\n\n    static getDistance (p1, p2) {\n        var powX = Math.pow((p1.x - p2.x), 2);\n        var powY = Math.pow((p1.y - p2.y), 2);\n\n        return Math.sqrt(powX + powY);\n    }\n}\n\nexport default Point\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/Point.es6\n **/","import Line from './Line';\n\nclass Vertex {\n    constructor (uid, point) {\n        this.uid = uid; // Unique identifier\n        this.point = point // Vertext position point\n    }\n}\n\nclass Edge {\n    constructor (line) {\n        this.line = line;\n    }\n}\n\nclass Graph {\n    constructor () {\n        this._vertexMap = {};\n        this._adjMatrix = {};\n    }\n\n    addEdge (sourceUid, destUid) {\n        var v = this.getVertex(sourceUid);\n        var w = this.getVertex(destUid);\n\n        if (!v || !w) {\n            return undefined;\n        }\n\n        // Return edge if exist\n        var edge = this.getEdge(sourceUid, destUid);\n        if (typeof edge !== 'undefined') {\n            return edge;\n        }\n\n        // Create edge line from first point to second point\n        var p1 = v.point;\n        var p2 = w.point;\n        var line = new Line(p1, p2);\n\n        // Save edge in special matrix\n        var edge = new Edge(line);\n        this._adjMatrix[sourceUid + ':' + destUid] = edge;\n\n        return edge;\n    }\n\n    hasEdge (sourceUid, destUid) {\n        var e = this.getEdge(sourceUid, destUid);\n        return typeof e !== 'undefined';\n    }\n\n    getEdge (sourceUid, destUid) {\n        var k1 = sourceUid + ':' + destUid;\n        var k2 = destUid + ':' + sourceUid;\n        return this._adjMatrix[k1] || this._adjMatrix[k2];\n    }\n\n\n    addVertex (vertexUid, point) {\n        var v = this._vertexMap[vertexUid];\n\n        if (typeof v === 'undefined') {\n            v = new Vertex(vertexUid, point);\n            this._vertexMap[vertexUid] = v;\n        }\n\n        return v;\n    }\n\n    hasVertex (vertexUid) {\n        var v = this.getVertex(vertexUid);\n        return typeof v !== 'undefined';\n    }\n\n    getVertex (vertexUid) {\n        return this._vertexMap[vertexUid];\n    }\n}\n\nexport default {\n    Vertex,\n    Edge,\n    Graph\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/PointsGraph.es6\n **/","import Point from './Point';\nimport Utils from './Utils';\n\nclass Line {\n    constructor (p1, p2) {\n        this.p1 = p1\n        this.p2 = p2\n\n        // Give the equation vars\n        this.a = p1.y - p2.y;\n        this.b = p2.x - p1.x;\n        this.c = -(this.a * p1.x + this.b * p1.y);\n\n        this.d = this.getDistance();\n    }\n\n    getDistance () {\n        return Line.getDistance(this);\n    }\n\n    getIntersectPoint (line) {\n        return Line.getIntersectPoint(this, line);\n    }\n\n    static getDistance (line) {\n        var a = Math.pow((line.p2.x - line.p1.x), 2);\n        var b = Math.pow((line.p2.y - line.p1.y), 2);\n        return Math.abs(Math.sqrt(a + b));\n    }\n\n    static getIntersectPoint (line1, line2) {\n        var det = function (a1, a2, b1, b2 ) {\n            return a1 * b2 - a2 * b1;\n        }\n\n        var zn = det(line1.a, line1.b, line2.a, line2.b);\n        var dx = det(line1.c, line1.b, line2.c, line2.b);\n        var dy = det(line1.a, line1.c, line2.a, line2.c);\n\n        var x = -(dx / zn);\n        var y = -(dy / zn);\n\n        var h = (line1.p1.x <= x && line1.p2.x >= x) || (line1.p2.x <= x && line1.p1.x >= x);\n        var v = (line2.p1.x <= x && line2.p2.x >= x) || (line2.p2.x <= x && line2.p1.x >= x);\n\n        return (h && v) ? new Point (x, y) : undefined;\n    }\n}\n\nexport default Line\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/Line.es6\n **/","import Point from './Point';\n\n// Returns a random number between min (inclusive) and max (exclusive)\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\n// Returns a random integer between min (included) and max (excluded)\n// Using Math.round() will give you a non-uniform distribution!\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction getRandomItem (arr) {\n    var rndIndex = getRandomInt(0, arr.length);\n    return arr[rndIndex];\n}\n\nfunction range (arr) {\n    var copy = arr.map(i => i).sort(compareNum);\n    return [copy[0], copy[copy.length - 1]];\n}\n\nfunction compareNum (a, b) {\n    return a - b;\n}\n\nfunction degToRad (deg) {\n    return Math.PI / 180 * deg;\n}\n\nfunction rndPolygonPoints (pivotPoint, pointsCount, max, min) {\n    var points = [];\n\n    var maxAngleOffset = Math.PI * 2 / pointsCount;\n    var minAngleOffset = Math.PI * 2 / pointsCount / 30;\n\n    var minLength = min;\n    var maxLength = max;\n\n    var currentAngle = 0;\n    for (var i = pointsCount; i >= 0; --i) {\n        currentAngle += getRandomArbitrary(minAngleOffset, (Math.PI * 2 - currentAngle) - maxAngleOffset * i);\n        var rndLength = getRandomArbitrary(minLength, maxLength);\n        var x = pivotPoint.x + rndLength * Math.cos(currentAngle);\n        var y = pivotPoint.y + rndLength * Math.sin(currentAngle);\n\n        points.push(new Point(x, y));\n    }\n\n    return points;\n}\n\nexport default {\n    getRandomArbitrary,\n    getRandomInt,\n    range,\n    compareNum,\n    degToRad,\n    rndPolygonPoints\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/Utils.es6\n **/"],"sourceRoot":""}